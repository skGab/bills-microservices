// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v5.26.1
// source: bills-database.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// BillsDatabaseServiceClient is the client API for BillsDatabaseService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BillsDatabaseServiceClient interface {
	GetAll(ctx context.Context, in *Client, opts ...grpc.CallOption) (*Bills, error)
}

type billsDatabaseServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBillsDatabaseServiceClient(cc grpc.ClientConnInterface) BillsDatabaseServiceClient {
	return &billsDatabaseServiceClient{cc}
}

func (c *billsDatabaseServiceClient) GetAll(ctx context.Context, in *Client, opts ...grpc.CallOption) (*Bills, error) {
	out := new(Bills)
	err := c.cc.Invoke(ctx, "/database_proto.BillsDatabaseService/getAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BillsDatabaseServiceServer is the server API for BillsDatabaseService service.
// All implementations must embed UnimplementedBillsDatabaseServiceServer
// for forward compatibility
type BillsDatabaseServiceServer interface {
	GetAll(context.Context, *Client) (*Bills, error)
	mustEmbedUnimplementedBillsDatabaseServiceServer()
}

// UnimplementedBillsDatabaseServiceServer must be embedded to have forward compatible implementations.
type UnimplementedBillsDatabaseServiceServer struct {
}

func (UnimplementedBillsDatabaseServiceServer) GetAll(context.Context, *Client) (*Bills, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}
func (UnimplementedBillsDatabaseServiceServer) mustEmbedUnimplementedBillsDatabaseServiceServer() {}

// UnsafeBillsDatabaseServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BillsDatabaseServiceServer will
// result in compilation errors.
type UnsafeBillsDatabaseServiceServer interface {
	mustEmbedUnimplementedBillsDatabaseServiceServer()
}

func RegisterBillsDatabaseServiceServer(s grpc.ServiceRegistrar, srv BillsDatabaseServiceServer) {
	s.RegisterService(&BillsDatabaseService_ServiceDesc, srv)
}

func _BillsDatabaseService_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Client)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillsDatabaseServiceServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/database_proto.BillsDatabaseService/getAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillsDatabaseServiceServer).GetAll(ctx, req.(*Client))
	}
	return interceptor(ctx, in, info, handler)
}

// BillsDatabaseService_ServiceDesc is the grpc.ServiceDesc for BillsDatabaseService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BillsDatabaseService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "database_proto.BillsDatabaseService",
	HandlerType: (*BillsDatabaseServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getAll",
			Handler:    _BillsDatabaseService_GetAll_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bills-database.proto",
}
